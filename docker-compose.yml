services:
  mosaic:
    build: .
    container_name: sirios-mosaic
    ports:
      - "8000:8000"
    env_file: .env
    environment:
      DATABASE_URL: ${DATABASE_URL}
      EXECUTOR_MODE: read-only
      MOSAIC_VERSION: "2025.10.15.1"
      GIT_SHA: "${GIT_SHA:-local}"
      PROMETHEUS_URL: "http://prometheus:9090"
      GRAFANA_URL: "http://grafana:3000"
      VIEWS_DIR: "/srv/data/views"
      LOG_FORMAT: "json"
      LOG_LEVEL: "INFO"
      LOG_FILE: "/var/log/mosaic/mosaic.log"
    volumes:
      - ./data/views:/srv/data/views:ro
      - ./logs:/var/log/mosaic
    networks:
      - mosaic_network
      - zaratustra_default
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:8000/healthz"]
      interval: 15s
      timeout: 3s
      retries: 5
      start_period: 15s

  loki:
    image: grafana/loki:2.9.8
    container_name: sirios-loki
    command:
      - -config.file=/etc/loki/local-config.yaml
      - -config.expand-env=true
    ports:
      - "3100:3100"
    volumes:
      - ./observability/loki-config.yaml:/etc/loki/local-config.yaml:ro
    networks:
      - mosaic_network
      - zaratustra_default
    restart: unless-stopped

  promtail:
    image: grafana/promtail:2.9.8
    container_name: sirios-promtail
    command:
      - -config.file=/etc/promtail/config.yml
      - -config.expand-env=true
    volumes:
      - ./observability/promtail-config.yml:/etc/promtail/config.yml:ro
      - ./logs:/var/log/mosaic:ro
    depends_on:
      - loki
    networks:
      - mosaic_network
      - zaratustra_default
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:v2.55.1
    container_name: sirios-prometheus
    volumes:
      - ./observability/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./observability/prometheus/alert_rules.yml:/etc/prometheus/alert_rules.yml:ro
    ports:
      - "9090:9090"
    networks:
      - mosaic_network
      - zaratustra_default
    restart: unless-stopped
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--web.enable-lifecycle"

  grafana:
    image: grafana/grafana:11.1.3
    container_name: sirios-grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_FEATURE_TOGGLES_ENABLE=playlistsProvisioning
    volumes:
      - ./observability/grafana/provisioning/:/etc/grafana/provisioning
      - ./observability/grafana/dashboards/:/var/lib/grafana/dashboards
      - ./observability/grafana/provisioning/playlists/:/etc/grafana/provisioning/playlists
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
      - loki
    networks:
      - mosaic_network
      - zaratustra_default
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: sirios-redis
    env_file: .env
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - mosaic_network
      - zaratustra_default

networks:
  mosaic_network:
    driver: bridge
  zaratustra_default:
    external: true

volumes:
  redis_data:
